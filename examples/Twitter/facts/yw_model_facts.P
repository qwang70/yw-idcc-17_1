
% FACT: program(program_id, program_name, qualified_program_name, begin_annotation_id, end_annotation_id).
program(1, 'Sentiment_NLTK', 'Sentiment_NLTK', 1, 59).
program(2, 'AccessTweets', 'Sentiment_NLTK.AccessTweets', 8, 16).
program(3, 'CountSentiments', 'Sentiment_NLTK.CountSentiments', 17, 27).
program(4, 'Measures', 'Sentiment_NLTK.Measures', 28, 44).
program(5, 'DrawPieChart', 'Sentiment_NLTK.DrawPieChart', 45, 58).

% FACT: workflow(program_id).
workflow(1).

% FACT: function(program_id).

% FACT: has_subprogram(program_id, subprogram_id).
has_subprogram(1, 2).
has_subprogram(1, 3).
has_subprogram(1, 4).
has_subprogram(1, 5).

% FACT: port(port_id, port_type, port_name, qualified_port_name, port_annotation_id, data_id).
port(1, 'in', 'Static_Tweets', 'Sentiment_NLTK<-Static_Tweets', 3, 1).
port(2, 'out', 'Sentiment_Result', 'Sentiment_NLTK->Sentiment_Result', 5, 2).
port(3, 'in', 'tweets_data_path', 'Sentiment_NLTK.AccessTweets<-tweets_data_path', 10, 3).
port(4, 'out', 'tweets_file', 'Sentiment_NLTK.AccessTweets->tweets_file', 14, 4).
port(5, 'in', 'tweets_file', 'Sentiment_NLTK.CountSentiments<-tweets_file', 19, 4).
port(6, 'out', 'positive', 'Sentiment_NLTK.CountSentiments->positive', 21, 5).
port(7, 'out', 'negative', 'Sentiment_NLTK.CountSentiments->negative', 23, 6).
port(8, 'out', 'neutral', 'Sentiment_NLTK.CountSentiments->neutral', 25, 7).
port(9, 'in', 'positive', 'Sentiment_NLTK.Measures<-positive', 30, 5).
port(10, 'in', 'negative', 'Sentiment_NLTK.Measures<-negative', 32, 6).
port(11, 'in', 'neutral', 'Sentiment_NLTK.Measures<-neutral', 34, 7).
port(12, 'out', 'explode', 'Sentiment_NLTK.Measures->explode', 36, 8).
port(13, 'out', 'labels', 'Sentiment_NLTK.Measures->labels', 38, 9).
port(14, 'out', 'sizes', 'Sentiment_NLTK.Measures->sizes', 40, 10).
port(15, 'out', 'colors', 'Sentiment_NLTK.Measures->colors', 42, 11).
port(16, 'param', 'explode', 'Sentiment_NLTK.DrawPieChart<-explode', 47, 8).
port(17, 'param', 'labels', 'Sentiment_NLTK.DrawPieChart<-labels', 49, 9).
port(18, 'in', 'sizes', 'Sentiment_NLTK.DrawPieChart<-sizes', 51, 10).
port(19, 'param', 'colors', 'Sentiment_NLTK.DrawPieChart<-colors', 53, 11).
port(20, 'out', 'plt', 'Sentiment_NLTK.DrawPieChart->plt', 55, 12).

% FACT: port_alias(port_id, alias).
port_alias(3, 'Static_Tweets').
port_alias(4, 'TweetRead').
port_alias(5, 'TweetRead').
port_alias(6, 'PositiveCount').
port_alias(7, 'NegativeCount').
port_alias(8, 'NeutralCount').
port_alias(9, 'PositiveCount').
port_alias(10, 'NegativeCount').
port_alias(11, 'NeutralCount').
port_alias(12, 'Explode').
port_alias(13, 'Labels').
port_alias(14, 'Sizes').
port_alias(15, 'Colors').
port_alias(16, 'Explode').
port_alias(17, 'Labels').
port_alias(18, 'Sizes').
port_alias(19, 'Colors').
port_alias(20, 'Sentiment_Result').

% FACT: port_uri_template(port_id, uri).
port_uri_template(1, 'file:static_tweet.csv').
port_uri_template(2, 'file:Scores_NLTK.jpg').
port_uri_template(3, 'file:static_tweet.csv').
port_uri_template(20, 'file:Scores_NLTK.jpg').

% FACT: has_in_port(block_id, port_id).
has_in_port(1, 1).
has_in_port(2, 3).
has_in_port(3, 5).
has_in_port(4, 9).
has_in_port(4, 10).
has_in_port(4, 11).
has_in_port(5, 16).
has_in_port(5, 17).
has_in_port(5, 18).
has_in_port(5, 19).

% FACT: has_out_port(block_id, port_id).
has_out_port(1, 2).
has_out_port(2, 4).
has_out_port(3, 6).
has_out_port(3, 7).
has_out_port(3, 8).
has_out_port(4, 12).
has_out_port(4, 13).
has_out_port(4, 14).
has_out_port(4, 15).
has_out_port(5, 20).

% FACT: data(data_id, data_name, qualified_data_name).
data(1, 'Static_Tweets', '[Static_Tweets]').
data(2, 'Sentiment_Result', '[Sentiment_Result]').
data(3, 'Static_Tweets', 'Sentiment_NLTK[Static_Tweets]').
data(4, 'TweetRead', 'Sentiment_NLTK[TweetRead]').
data(5, 'PositiveCount', 'Sentiment_NLTK[PositiveCount]').
data(6, 'NegativeCount', 'Sentiment_NLTK[NegativeCount]').
data(7, 'NeutralCount', 'Sentiment_NLTK[NeutralCount]').
data(8, 'Explode', 'Sentiment_NLTK[Explode]').
data(9, 'Labels', 'Sentiment_NLTK[Labels]').
data(10, 'Sizes', 'Sentiment_NLTK[Sizes]').
data(11, 'Colors', 'Sentiment_NLTK[Colors]').
data(12, 'Sentiment_Result', 'Sentiment_NLTK[Sentiment_Result]').

% FACT: channel(channel_id, data_id).
channel(1, 2).
channel(2, 3).
channel(3, 4).
channel(4, 5).
channel(5, 6).
channel(6, 7).
channel(7, 8).
channel(8, 9).
channel(9, 10).
channel(10, 11).
channel(11, 1).
channel(12, 12).

% FACT: port_connects_to_channel(port_id, channel_id).
port_connects_to_channel(20, 1).
port_connects_to_channel(3, 2).
port_connects_to_channel(4, 3).
port_connects_to_channel(5, 3).
port_connects_to_channel(6, 4).
port_connects_to_channel(9, 4).
port_connects_to_channel(7, 5).
port_connects_to_channel(10, 5).
port_connects_to_channel(8, 6).
port_connects_to_channel(11, 6).
port_connects_to_channel(12, 7).
port_connects_to_channel(16, 7).
port_connects_to_channel(13, 8).
port_connects_to_channel(17, 8).
port_connects_to_channel(14, 9).
port_connects_to_channel(18, 9).
port_connects_to_channel(15, 10).
port_connects_to_channel(19, 10).
port_connects_to_channel(3, 11).
port_connects_to_channel(20, 12).

% FACT: inflow_connects_to_channel(port_id, channel_id).
inflow_connects_to_channel(1, 2).
inflow_connects_to_channel(1, 11).

% FACT: outflow_connects_to_channel(port_id, channel_id).
outflow_connects_to_channel(2, 1).
outflow_connects_to_channel(2, 12).

% FACT: uri_variable(uri_variable_id, variable_name, port_id).

% FACT: log_template(log_template_id, port_id, entry_template, log_annotation_id).

% FACT: log_template_variable(log_variable_id, variable_name, log_template_id).
