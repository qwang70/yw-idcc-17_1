
% FACT: extract_source(source_id, source_path).
extract_source(1, './script/clean_name_date_yw.py').

% FACT: annotation(annotation_id, source_id, line_number, tag, keyword, value).
annotation(1, 1, 11, 'begin', '@begin', 'clean_name_and_date_workflow').
annotation(2, 1, 12, 'in', '@in', 'input1_data').
annotation(3, 1, 12, 'uri', '@uri', 'file:demo_input.csv').
annotation(4, 1, 12, 'as', '@as', 'original_dataset').
annotation(5, 1, 13, 'param', '@param', 'local_authority_source').
annotation(6, 1, 13, 'uri', '@uri', 'file:demo_localDB.csv').
annotation(7, 1, 14, 'out', '@out', 'name_val_log').
annotation(8, 1, 14, 'uri', '@uri', 'file:name_val_log.txt').
annotation(9, 1, 14, 'as', '@as', 'name_cleaning_log').
annotation(10, 1, 15, 'out', '@out', 'output2_data').
annotation(11, 1, 15, 'uri', '@uri', 'file:demo_output_name_date_val.csv').
annotation(12, 1, 15, 'as', '@as', 'data_with_cleaned_names_and_dates').
annotation(13, 1, 16, 'out', '@out', 'date_val_log').
annotation(14, 1, 16, 'uri', '@uri', 'file:date_val_log.txt').
annotation(15, 1, 16, 'as', '@as', 'date_cleaning_log').
annotation(16, 1, 20, 'begin', '@begin', 'clean_scientific_name').
annotation(17, 1, 20, 'desc', '@desc', 'Clean scientificName field').
annotation(18, 1, 21, 'param', '@param', 'local_authority_source').
annotation(19, 1, 21, 'uri', '@uri', 'file:demo_localDB.csv').
annotation(20, 1, 22, 'in', '@in', 'input1_data').
annotation(21, 1, 22, 'uri', '@uri', 'file:demo_input.csv').
annotation(22, 1, 22, 'as', '@as', 'original_dataset').
annotation(23, 1, 23, 'out', '@out', 'output1_data').
annotation(24, 1, 23, 'uri', '@uri', 'file:demo_output_name_val.csv').
annotation(25, 1, 23, 'as', '@as', 'data_with_cleaned_names').
annotation(26, 1, 24, 'out', '@out', 'name_val_log').
annotation(27, 1, 24, 'uri', '@uri', 'file:name_val_log.txt').
annotation(28, 1, 24, 'as', '@as', 'name_cleaning_log').
annotation(29, 1, 25, 'out', '@out', 'record_id_data').
annotation(30, 1, 25, 'uri', '@uri', 'file:record_id.txt').
annotation(31, 1, 45, 'begin', '@begin', 'initialize_run').
annotation(32, 1, 45, 'desc', '@desc', 'Create the run log file').
annotation(33, 1, 46, 'out', '@out', 'name_val_log').
annotation(34, 1, 46, 'uri', '@uri', 'file:name_val_log.txt').
annotation(35, 1, 46, 'as', '@as', 'name_cleaning_log').
annotation(36, 1, 47, 'log', '@log', '{timestamp} Reading input records from {input1_data_file_name}').
annotation(37, 1, 53, 'end', '@end', 'initialize_run').
annotation(38, 1, 57, 'begin', '@begin', 'read_scientific_name').
annotation(39, 1, 57, 'desc', '@desc', 'Read scientificName from local authority source').
annotation(40, 1, 58, 'param', '@param', 'local_authority_source').
annotation(41, 1, 58, 'uri', '@uri', 'file:demo_localDB.csv').
annotation(42, 1, 59, 'call', '@call', 'fieldmatch').
annotation(43, 1, 60, 'out', '@out', 'local_authority_source_scientificName_lst').
annotation(44, 1, 60, 'as', '@as', 'local_authority_source_scientificName_list').
annotation(45, 1, 90, 'end', '@end', 'read_scientific_name').
annotation(46, 1, 94, 'begin', '@begin', 'read_data_records').
annotation(47, 1, 94, 'desc', '@desc', 'Read original dataset').
annotation(48, 1, 95, 'in', '@in', 'input1_data').
annotation(49, 1, 95, 'uri', '@uri', 'file:demo_input.csv').
annotation(50, 1, 95, 'as', '@as', 'original_dataset').
annotation(51, 1, 96, 'out', '@out', 'original_scientificName').
annotation(52, 1, 96, 'as', '@as', 'scientificName').
annotation(53, 1, 97, 'out', '@out', 'original_authorship').
annotation(54, 1, 97, 'as', '@as', 'authorship').
annotation(55, 1, 98, 'out', '@out', 'RecordID').
annotation(56, 1, 99, 'out', '@out', 'original_others').
annotation(57, 1, 99, 'as', '@as', 'other_fields').
annotation(58, 1, 100, 'out', '@out', 'record_id_data').
annotation(59, 1, 100, 'uri', '@uri', 'file:record_id.txt').
annotation(60, 1, 101, 'out', '@out', 'name_val_log').
annotation(61, 1, 101, 'uri', '@uri', 'file:name_val_log.txt').
annotation(62, 1, 101, 'as', '@as', 'name_cleaning_log').
annotation(63, 1, 102, 'log', '@log', '{timestamp} Reading input record {RecordID}').
annotation(64, 1, 134, 'end', '@end', 'read_data_records').
annotation(65, 1, 138, 'begin', '@begin', 'check_if_name_is_nonempty').
annotation(66, 1, 138, 'desc', '@desc', 'Check if scientificName value is present').
annotation(67, 1, 139, 'in', '@in', 'original_scientificName').
annotation(68, 1, 139, 'as', '@as', 'scientificName').
annotation(69, 1, 140, 'out', '@out', 'original_scientificName').
annotation(70, 1, 140, 'as', '@as', 'empty_scientificName').
annotation(71, 1, 141, 'out', '@out', 'original_scientificName').
annotation(72, 1, 141, 'as', '@as', 'nonEmpty_scientificName').
annotation(73, 1, 142, 'out', '@out', 'name_val_log').
annotation(74, 1, 142, 'uri', '@uri', 'file:name_val_log.txt').
annotation(75, 1, 142, 'as', '@as', 'name_cleaning_log').
annotation(76, 1, 143, 'log', '@log', '{timestamp} Checking if {field_name} value is Empty - {check_result}').
annotation(77, 1, 159, 'end', '@end', 'check_if_name_is_nonempty').
annotation(78, 1, 163, 'begin', '@begin', 'log_name_is_empty').
annotation(79, 1, 163, 'desc', '@desc', 'Log records of empty scientific name with final status as unable to validate').
annotation(80, 1, 164, 'param', '@param', 'RecordID').
annotation(81, 1, 165, 'in', '@in', 'original_scientificName').
annotation(82, 1, 165, 'as', '@as', 'empty_scientificName').
annotation(83, 1, 166, 'out', '@out', 'final_result').
annotation(84, 1, 166, 'as', '@as', 'record_final_status').
annotation(85, 1, 167, 'out', '@out', 'rejected_record_count').
annotation(86, 1, 167, 'as', '@as', 'unable-to-validate_record_count').
annotation(87, 1, 168, 'out', '@out', 'name_val_log').
annotation(88, 1, 168, 'uri', '@uri', 'file:name_val_log.txt').
annotation(89, 1, 168, 'as', '@as', 'name_cleaning_log').
annotation(90, 1, 169, 'log', '@log', '{timestamp} {final_result} the record {RecordID}').
annotation(91, 1, 182, 'end', '@end', 'log_name_is_empty').
annotation(92, 1, 188, 'begin', '@begin', 'find_name_match').
annotation(93, 1, 189, 'desc', '@desc', 'Find if the scientificName matches any record in the local authority source using exact and fuzzy match').
annotation(94, 1, 190, 'in', '@in', 'original_scientificName').
annotation(95, 1, 190, 'as', '@as', 'nonEmpty_scientificName').
annotation(96, 1, 191, 'param', '@param', 'local_authority_source_scientificName_lst').
annotation(97, 1, 191, 'as', '@as', 'local_authority_source_scientificName_list').
annotation(98, 1, 192, 'call', '@call', 'exactmatch').
annotation(99, 1, 193, 'call', '@call', 'fieldmatch').
annotation(100, 1, 194, 'out', '@out', 'matching_local_authority_source_record').
annotation(101, 1, 194, 'as', '@as', 'matching_record').
annotation(102, 1, 195, 'out', '@out', 'match_result').
annotation(103, 1, 196, 'out', '@out', 'final_result').
annotation(104, 1, 196, 'as', '@as', 'record_final_status').
annotation(105, 1, 197, 'out', '@out', 'matching_method').
annotation(106, 1, 198, 'out', '@out', 'name_val_log').
annotation(107, 1, 198, 'uri', '@uri', 'file:name_val_log.txt').
annotation(108, 1, 198, 'as', '@as', 'name_cleaning_log').
annotation(109, 1, 199, 'log', '@log', '{timestamp} Trying {check_type} {source_used} {match_method} match for validating {field_name}: <{field_name_value}>').
annotation(110, 1, 200, 'log', '@log', '{timestamp} {match_method} match was {match_result}, compliant with {source_used}: {compliant_result}.').
annotation(111, 1, 227, 'end', '@end', 'find_name_match').
annotation(112, 1, 233, 'begin', '@begin', 'log_match_not_found').
annotation(113, 1, 233, 'desc', '@desc', 'Log record where no match is found in authority source final status as unable to validate').
annotation(114, 1, 234, 'param', '@param', 'RecordID').
annotation(115, 1, 235, 'in', '@in', 'final_result').
annotation(116, 1, 235, 'as', '@as', 'record_final_status').
annotation(117, 1, 236, 'in', '@in', 'match_result').
annotation(118, 1, 237, 'out', '@out', 'rejected_record_count').
annotation(119, 1, 237, 'as', '@as', 'unable-to-validate_record_count').
annotation(120, 1, 238, 'out', '@out', 'name_val_log').
annotation(121, 1, 238, 'uri', '@uri', 'file:name_val_log.txt').
annotation(122, 1, 238, 'as', '@as', 'name_cleaning_log').
annotation(123, 1, 239, 'log', '@log', '{timestamp} {final_result} the record {RecordID}').
annotation(124, 1, 252, 'end', '@end', 'log_match_not_found').
annotation(125, 1, 257, 'begin', '@begin', 'update_scientific_name').
annotation(126, 1, 257, 'desc', '@desc', 'Update scientificName if fuzzy match is found').
annotation(127, 1, 258, 'in', '@in', 'matching_method').
annotation(128, 1, 259, 'in', '@in', 'match_result').
annotation(129, 1, 260, 'in', '@in', 'matching_local_authority_source_record').
annotation(130, 1, 260, 'as', '@as', 'matching_record').
annotation(131, 1, 261, 'out', '@out', 'updated_scientificName').
annotation(132, 1, 269, 'end', '@end', 'update_scientific_name').
annotation(133, 1, 274, 'begin', '@begin', 'update_authorship').
annotation(134, 1, 274, 'desc', '@desc', 'Update authorship if fuzzy match is found').
annotation(135, 1, 275, 'in', '@in', 'original_authorship').
annotation(136, 1, 275, 'as', '@as', 'authorship').
annotation(137, 1, 276, 'in', '@in', 'matching_method').
annotation(138, 1, 277, 'in', '@in', 'matching_local_authority_source_record').
annotation(139, 1, 277, 'as', '@as', 'matching_record').
annotation(140, 1, 278, 'out', '@out', 'updated_authorship').
annotation(141, 1, 288, 'end', '@end', 'update_authorship').
annotation(142, 1, 294, 'begin', '@begin', 'log_updated_record').
annotation(143, 1, 294, 'desc', '@desc', 'Log records updating from old value to new value').
annotation(144, 1, 295, 'in', '@in', 'updated_scientificName').
annotation(145, 1, 296, 'in', '@in', 'updated_authorship').
annotation(146, 1, 297, 'in', '@in', 'original_authorship').
annotation(147, 1, 297, 'as', '@as', 'authorship').
annotation(148, 1, 298, 'out', '@out', 'name_val_log').
annotation(149, 1, 298, 'uri', '@uri', 'file:name_val_log.txt').
annotation(150, 1, 298, 'as', '@as', 'name_cleaning_log').
annotation(151, 1, 299, 'log', '@log', '{timestamp} UPDATING record {RecordID}: {field_name} from <{original_value}> to <{updated_value}>').
annotation(152, 1, 317, 'end', '@end', 'log_updated_record').
annotation(153, 1, 321, 'begin', '@begin', 'log_accepted_record').
annotation(154, 1, 321, 'desc', '@desc', 'Log record final status as accepted').
annotation(155, 1, 322, 'param', '@param', 'RecordID').
annotation(156, 1, 323, 'in', '@in', 'final_result').
annotation(157, 1, 323, 'as', '@as', 'record_final_status').
annotation(158, 1, 324, 'out', '@out', 'accepted_record_count').
annotation(159, 1, 325, 'out', '@out', 'name_val_log').
annotation(160, 1, 325, 'uri', '@uri', 'file:name_val_log.txt').
annotation(161, 1, 325, 'as', '@as', 'name_cleaning_log').
annotation(162, 1, 326, 'log', '@log', '{timestamp} {final_result} the record {RecordID}').
annotation(163, 1, 331, 'end', '@end', 'log_accepted_record').
annotation(164, 1, 336, 'begin', '@begin', 'write_data_into_file').
annotation(165, 1, 336, 'desc', '@desc', 'Write data into a new file').
annotation(166, 1, 337, 'in', '@in', 'original_others').
annotation(167, 1, 337, 'as', '@as', 'other_fields').
annotation(168, 1, 338, 'in', '@in', 'original_scientificName').
annotation(169, 1, 338, 'as', '@as', 'scientificName').
annotation(170, 1, 339, 'in', '@in', 'original_authorship').
annotation(171, 1, 339, 'as', '@as', 'authorship').
annotation(172, 1, 340, 'in', '@in', 'updated_scientificName').
annotation(173, 1, 341, 'in', '@in', 'updated_authorship').
annotation(174, 1, 342, 'out', '@out', 'output1_data').
annotation(175, 1, 342, 'uri', '@uri', 'file:demo_output_name_val.csv').
annotation(176, 1, 342, 'as', '@as', 'data_with_cleaned_names').
annotation(177, 1, 347, 'end', '@end', 'write_output1_data').
annotation(178, 1, 351, 'begin', '@begin', 'log_summary').
annotation(179, 1, 351, 'desc', '@desc', 'Summarize on all the records').
annotation(180, 1, 352, 'in', '@in', 'accepted_record_count').
annotation(181, 1, 353, 'in', '@in', 'rejected_record_count').
annotation(182, 1, 353, 'as', '@as', 'unable-to-validate_record_count').
annotation(183, 1, 354, 'out', '@out', 'name_val_log').
annotation(184, 1, 354, 'uri', '@uri', 'file:name_val_log.txt').
annotation(185, 1, 354, 'as', '@as', 'name_cleaning_log').
annotation(186, 1, 355, 'log', '@log', '{timestamp} Wrote {accepted_record_count} ACCEPTED records to {output1_data_file_name}').
annotation(187, 1, 356, 'log', '@log', '{timestamp} Wrote {rejected_record_count} UNABLE-to-validate records to {output1_data_file_name}').
annotation(188, 1, 363, 'end', '@end', 'log_summary').
annotation(189, 1, 367, 'end', '@end', 'clean_scientific_name').
annotation(190, 1, 371, 'begin', '@begin', 'clean_event_date').
annotation(191, 1, 371, 'desc', '@desc', 'Clean eventDate field').
annotation(192, 1, 372, 'in', '@in', 'output1_data').
annotation(193, 1, 372, 'uri', '@uri', 'file:demo_output_name_val.csv').
annotation(194, 1, 372, 'as', '@as', 'data_with_cleaned_names').
annotation(195, 1, 373, 'param', '@param', 'record_id_data').
annotation(196, 1, 373, 'uri', '@uri', 'file:record_id.txt').
annotation(197, 1, 374, 'out', '@out', 'output2_data').
annotation(198, 1, 374, 'uri', '@uri', 'file:demo_output_name_date_val.csv').
annotation(199, 1, 374, 'as', '@as', 'data_with_cleaned_names_and_dates').
annotation(200, 1, 375, 'out', '@out', 'date_val_log').
annotation(201, 1, 375, 'uri', '@uri', 'file:date_val_log.txt').
annotation(202, 1, 375, 'as', '@as', 'date_cleaning_log').
annotation(203, 1, 392, 'begin', '@begin', 'initialize_run').
annotation(204, 1, 392, 'desc', '@desc', 'Create the run log file').
annotation(205, 1, 393, 'out', '@out', 'date_val_log').
annotation(206, 1, 393, 'uri', '@uri', 'file:date_val_log.txt').
annotation(207, 1, 393, 'as', '@as', 'date_cleaning_log').
annotation(208, 1, 394, 'log', '@log', '{timestamp} Reading input records from {input2_data_file_name}').
annotation(209, 1, 400, 'end', '@end', 'initialize_run').
annotation(210, 1, 404, 'begin', '@begin', 'read_data_records').
annotation(211, 1, 404, 'desc', '@desc', 'Read data with cleaned names').
annotation(212, 1, 405, 'in', '@in', 'input2_data').
annotation(213, 1, 405, 'uri', '@uri', 'file:demo_output_name_val.csv').
annotation(214, 1, 405, 'as', '@as', 'data_with_cleaned_names').
annotation(215, 1, 406, 'in', '@in', 'record_id_data').
annotation(216, 1, 406, 'uri', '@uri', 'file:record_id.txt').
annotation(217, 1, 407, 'out', '@out', 'original2_eventDate').
annotation(218, 1, 407, 'as', '@as', 'eventDate').
annotation(219, 1, 408, 'out', '@out', 'RecordID').
annotation(220, 1, 409, 'out', '@out', 'original2_others').
annotation(221, 1, 409, 'as', '@as', 'other_fields').
annotation(222, 1, 410, 'out', '@out', 'date_val_log').
annotation(223, 1, 410, 'uri', '@uri', 'file:date_val_log.txt').
annotation(224, 1, 410, 'as', '@as', 'date_cleaning_log').
annotation(225, 1, 411, 'log', '@log', '{timestamp} Reading input record {RecordID}').
annotation(226, 1, 441, 'end', '@end', 'read_input2_data_records').
annotation(227, 1, 445, 'begin', '@begin', 'check_if_date_is_nonempty').
annotation(228, 1, 445, 'desc', '@desc', 'Check if eventDate value is present').
annotation(229, 1, 446, 'in', '@in', 'original2_eventDate').
annotation(230, 1, 446, 'as', '@as', 'eventDate').
annotation(231, 1, 447, 'out', '@out', 'original2_eventDate').
annotation(232, 1, 447, 'as', '@as', 'empty_eventDate').
annotation(233, 1, 448, 'out', '@out', 'original2_eventDate').
annotation(234, 1, 448, 'as', '@as', 'nonEmpty_eventDate').
annotation(235, 1, 449, 'out', '@out', 'date_val_log').
annotation(236, 1, 449, 'uri', '@uri', 'file:date_val_log.txt').
annotation(237, 1, 449, 'as', '@as', 'date_cleaning_log').
annotation(238, 1, 450, 'log', '@log', '{timestamp} Checking if {field_name} value is Empty: {check_result}').
annotation(239, 1, 466, 'end', '@end', 'check_if_date_is_nonempty').
annotation(240, 1, 470, 'begin', '@begin', 'log_date_is_empty').
annotation(241, 1, 470, 'desc', '@desc', 'Log records of empty event date with final status as unable to validate').
annotation(242, 1, 471, 'param', '@param', 'RecordID').
annotation(243, 1, 472, 'in', '@in', 'original2_eventDate').
annotation(244, 1, 472, 'as', '@as', 'empty_eventDate').
annotation(245, 1, 473, 'out', '@out', 'rejected2_record_count').
annotation(246, 1, 473, 'as', '@as', 'unable-to-validate_record_count').
annotation(247, 1, 474, 'out', '@out', 'date_val_log').
annotation(248, 1, 474, 'uri', '@uri', 'file:date_val_log.txt').
annotation(249, 1, 474, 'as', '@as', 'date_cleaning_log').
annotation(250, 1, 475, 'log', '@log', '{timestamp} {final_result} the record {RecordID}').
annotation(251, 1, 489, 'end', '@end', 'log_date_is_empty').
annotation(252, 1, 495, 'begin', '@begin', 'check_ISO_date_compliant').
annotation(253, 1, 496, 'desc', '@desc', 'Check if the eventDate is compliant with ISO date format (YYYY-MM-DD)').
annotation(254, 1, 497, 'in', '@in', 'original2_eventDate').
annotation(255, 1, 497, 'as', '@as', 'nonEmpty_eventDate').
annotation(256, 1, 498, 'out', '@out', 'original2_eventDate').
annotation(257, 1, 498, 'as', '@as', 'compliant_eventDate').
annotation(258, 1, 499, 'out', '@out', 'original2_eventDate').
annotation(259, 1, 499, 'as', '@as', 'nonCompliant_eventDate').
annotation(260, 1, 500, 'out', '@out', 'date_val_log').
annotation(261, 1, 500, 'uri', '@uri', 'file:date_val_log.txt').
annotation(262, 1, 500, 'as', '@as', 'date_cleaning_log').
annotation(263, 1, 501, 'log', '@log', '{timestamp} Trying {check_type} {source_used} {match_method} match for validating {field_name}: <{field_name_value}>').
annotation(264, 1, 502, 'log', '@log', '{timestamp} {match_method} match was {match_result}, compliant with {source_used}: {match_result}.').
annotation(265, 1, 520, 'end', '@end', 'check_ISO_date_compliant').
annotation(266, 1, 524, 'begin', '@begin', 'update_event_date').
annotation(267, 1, 524, 'desc', '@desc', 'Update eventDate by date format conversion').
annotation(268, 1, 525, 'in', '@in', 'original2_eventDate').
annotation(269, 1, 525, 'as', '@as', 'nonCompliant_eventDate').
annotation(270, 1, 526, 'out', '@out', 'updated2_eventDate').
annotation(271, 1, 526, 'as', '@as', 'updated_eventDate').
annotation(272, 1, 527, 'out', '@out', 'date_val_log').
annotation(273, 1, 527, 'uri', '@uri', 'file:date_val_log.txt').
annotation(274, 1, 527, 'as', '@as', 'date_cleaning_log').
annotation(275, 1, 528, 'log', '@log', '{timestamp} UPDATING record {RecordID}: {field_name} from <{original_value}> to <{updated_value}>').
annotation(276, 1, 565, 'end', '@end', 'update_event_date').
annotation(277, 1, 569, 'begin', '@begin', 'log_accepted_record').
annotation(278, 1, 569, 'desc', '@desc', 'Log record final status as accepted').
annotation(279, 1, 570, 'param', '@param', 'RecordID').
annotation(280, 1, 571, 'in', '@in', 'updated2_eventDate').
annotation(281, 1, 571, 'as', '@as', 'updated_eventDate').
annotation(282, 1, 572, 'in', '@in', 'original2_eventDate').
annotation(283, 1, 572, 'as', '@as', 'compliant_eventDate').
annotation(284, 1, 573, 'out', '@out', 'accepted2_record_count').
annotation(285, 1, 573, 'as', '@as', 'accepted_record_count').
annotation(286, 1, 574, 'out', '@out', 'date_val_log').
annotation(287, 1, 574, 'uri', '@uri', 'file:date_val_log.txt').
annotation(288, 1, 574, 'as', '@as', 'date_cleaning_log').
annotation(289, 1, 575, 'log', '@log', '{timestamp} {final_result} the record {RecordID}').
annotation(290, 1, 580, 'end', '@end', 'log_accepted_record').
annotation(291, 1, 585, 'begin', '@begin', 'write_data_into_file').
annotation(292, 1, 585, 'desc', '@desc', 'Write data into a new file').
annotation(293, 1, 586, 'in', '@in', 'original2_others').
annotation(294, 1, 586, 'as', '@as', 'other_fields').
annotation(295, 1, 587, 'in', '@in', 'updated2_eventDate').
annotation(296, 1, 587, 'as', '@as', 'updated_eventDate').
annotation(297, 1, 588, 'in', '@in', 'original2_eventDate').
annotation(298, 1, 588, 'as', '@as', 'eventDate').
annotation(299, 1, 589, 'out', '@out', 'output2_data').
annotation(300, 1, 589, 'uri', '@uri', 'file:demo_output_name_date_val.csv').
annotation(301, 1, 589, 'as', '@as', 'data_with_cleaned_names_and_dates').
annotation(302, 1, 594, 'end', '@end', 'write_output2_data').
annotation(303, 1, 598, 'begin', '@begin', 'log_summary').
annotation(304, 1, 598, 'desc', '@desc', 'Summarize on all the records').
annotation(305, 1, 599, 'in', '@in', 'accepted2_record_count').
annotation(306, 1, 599, 'as', '@as', 'accepted_record_count').
annotation(307, 1, 600, 'in', '@in', 'rejected2_record_count').
annotation(308, 1, 600, 'as', '@as', 'unable-to-validate_record_count').
annotation(309, 1, 601, 'out', '@out', 'date_val_log').
annotation(310, 1, 601, 'uri', '@uri', 'file:date_val_log.txt').
annotation(311, 1, 601, 'as', '@as', 'date_cleaning_log').
annotation(312, 1, 602, 'log', '@log', '{timestamp} Wrote {accepted2_record_count} accepted records to {output2_data_file_name}').
annotation(313, 1, 603, 'log', '@log', '{timestamp} Wrote {rejected2_record_count} UNABLE-to-validate records to {rejected2_data_file_name}').
annotation(314, 1, 610, 'end', '@end', 'log_summary').
annotation(315, 1, 614, 'end', '@end', 'clean_event_date').
annotation(316, 1, 618, 'end', '@end', 'clean_name_and_date_workflow').
annotation(317, 1, 622, 'begin', '@begin', 'exactmatch').
annotation(318, 1, 623, 'param', '@param', 'lst').
annotation(319, 1, 624, 'param', '@param', 'label_str').
annotation(320, 1, 625, 'return', '@return', 'key').
annotation(321, 1, 626, 'return', '@return', 'None').
annotation(322, 1, 638, 'end', '@end', 'exactmatch').
annotation(323, 1, 642, 'begin', '@begin', 'fuzzymatch').
annotation(324, 1, 643, 'param', '@param', 'str1').
annotation(325, 1, 644, 'param', '@param', 'str2').
annotation(326, 1, 645, 'return', '@return', '[match_result,').
annotation(327, 1, 673, 'end', '@end', 'fuzzymatch').
annotation(328, 1, 677, 'begin', '@begin', 'fieldmatch').
annotation(329, 1, 678, 'param', '@param', 'lst').
annotation(330, 1, 679, 'param', '@param', 'str2').
annotation(331, 1, 680, 'call', '@call', 'fuzzymatch').
annotation(332, 1, 681, 'return', '@return', 'match_str').
annotation(333, 1, 692, 'end', '@end', 'fieldmatch').
annotation(334, 1, 697, 'begin', '@begin', 'timestamp').
annotation(335, 1, 698, 'param', '@param', 'message').
annotation(336, 1, 699, 'return', '@return', 'timestamp_message').
annotation(337, 1, 708, 'end', '@end', 'timestamp').

% FACT: annotation_qualifies(qualifying_annotation_id, primary_annotation_id).
annotation_qualifies(3, 2).
annotation_qualifies(4, 2).
annotation_qualifies(6, 5).
annotation_qualifies(8, 7).
annotation_qualifies(9, 7).
annotation_qualifies(11, 10).
annotation_qualifies(12, 10).
annotation_qualifies(14, 13).
annotation_qualifies(15, 13).
annotation_qualifies(17, 16).
annotation_qualifies(19, 18).
annotation_qualifies(21, 20).
annotation_qualifies(22, 20).
annotation_qualifies(24, 23).
annotation_qualifies(25, 23).
annotation_qualifies(27, 26).
annotation_qualifies(28, 26).
annotation_qualifies(30, 29).
annotation_qualifies(32, 31).
annotation_qualifies(34, 33).
annotation_qualifies(35, 33).
annotation_qualifies(36, 33).
annotation_qualifies(39, 38).
annotation_qualifies(41, 40).
annotation_qualifies(44, 43).
annotation_qualifies(47, 46).
annotation_qualifies(49, 48).
annotation_qualifies(50, 48).
annotation_qualifies(52, 51).
annotation_qualifies(54, 53).
annotation_qualifies(57, 56).
annotation_qualifies(59, 58).
annotation_qualifies(61, 60).
annotation_qualifies(62, 60).
annotation_qualifies(63, 60).
annotation_qualifies(66, 65).
annotation_qualifies(68, 67).
annotation_qualifies(70, 69).
annotation_qualifies(72, 71).
annotation_qualifies(74, 73).
annotation_qualifies(75, 73).
annotation_qualifies(76, 73).
annotation_qualifies(79, 78).
annotation_qualifies(82, 81).
annotation_qualifies(84, 83).
annotation_qualifies(86, 85).
annotation_qualifies(88, 87).
annotation_qualifies(89, 87).
annotation_qualifies(90, 87).
annotation_qualifies(93, 92).
annotation_qualifies(95, 94).
annotation_qualifies(97, 96).
annotation_qualifies(101, 100).
annotation_qualifies(104, 103).
annotation_qualifies(107, 106).
annotation_qualifies(108, 106).
annotation_qualifies(109, 106).
annotation_qualifies(110, 106).
annotation_qualifies(113, 112).
annotation_qualifies(116, 115).
annotation_qualifies(119, 118).
annotation_qualifies(121, 120).
annotation_qualifies(122, 120).
annotation_qualifies(123, 120).
annotation_qualifies(126, 125).
annotation_qualifies(130, 129).
annotation_qualifies(134, 133).
annotation_qualifies(136, 135).
annotation_qualifies(139, 138).
annotation_qualifies(143, 142).
annotation_qualifies(147, 146).
annotation_qualifies(149, 148).
annotation_qualifies(150, 148).
annotation_qualifies(151, 148).
annotation_qualifies(154, 153).
annotation_qualifies(157, 156).
annotation_qualifies(160, 159).
annotation_qualifies(161, 159).
annotation_qualifies(162, 159).
annotation_qualifies(165, 164).
annotation_qualifies(167, 166).
annotation_qualifies(169, 168).
annotation_qualifies(171, 170).
annotation_qualifies(175, 174).
annotation_qualifies(176, 174).
annotation_qualifies(179, 178).
annotation_qualifies(182, 181).
annotation_qualifies(184, 183).
annotation_qualifies(185, 183).
annotation_qualifies(186, 183).
annotation_qualifies(187, 183).
annotation_qualifies(191, 190).
annotation_qualifies(193, 192).
annotation_qualifies(194, 192).
annotation_qualifies(196, 195).
annotation_qualifies(198, 197).
annotation_qualifies(199, 197).
annotation_qualifies(201, 200).
annotation_qualifies(202, 200).
annotation_qualifies(204, 203).
annotation_qualifies(206, 205).
annotation_qualifies(207, 205).
annotation_qualifies(208, 205).
annotation_qualifies(211, 210).
annotation_qualifies(213, 212).
annotation_qualifies(214, 212).
annotation_qualifies(216, 215).
annotation_qualifies(218, 217).
annotation_qualifies(221, 220).
annotation_qualifies(223, 222).
annotation_qualifies(224, 222).
annotation_qualifies(225, 222).
annotation_qualifies(228, 227).
annotation_qualifies(230, 229).
annotation_qualifies(232, 231).
annotation_qualifies(234, 233).
annotation_qualifies(236, 235).
annotation_qualifies(237, 235).
annotation_qualifies(238, 235).
annotation_qualifies(241, 240).
annotation_qualifies(244, 243).
annotation_qualifies(246, 245).
annotation_qualifies(248, 247).
annotation_qualifies(249, 247).
annotation_qualifies(250, 247).
annotation_qualifies(253, 252).
annotation_qualifies(255, 254).
annotation_qualifies(257, 256).
annotation_qualifies(259, 258).
annotation_qualifies(261, 260).
annotation_qualifies(262, 260).
annotation_qualifies(263, 260).
annotation_qualifies(264, 260).
annotation_qualifies(267, 266).
annotation_qualifies(269, 268).
annotation_qualifies(271, 270).
annotation_qualifies(273, 272).
annotation_qualifies(274, 272).
annotation_qualifies(275, 272).
annotation_qualifies(278, 277).
annotation_qualifies(281, 280).
annotation_qualifies(283, 282).
annotation_qualifies(285, 284).
annotation_qualifies(287, 286).
annotation_qualifies(288, 286).
annotation_qualifies(289, 286).
annotation_qualifies(292, 291).
annotation_qualifies(294, 293).
annotation_qualifies(296, 295).
annotation_qualifies(298, 297).
annotation_qualifies(300, 299).
annotation_qualifies(301, 299).
annotation_qualifies(304, 303).
annotation_qualifies(306, 305).
annotation_qualifies(308, 307).
annotation_qualifies(310, 309).
annotation_qualifies(311, 309).
annotation_qualifies(312, 309).
annotation_qualifies(313, 309).
